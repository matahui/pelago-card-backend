// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.4
// Source: card.proto

package cardservice

import (
	"context"

	"pelago-card-backend/app/pb/card"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	OpenCardReq  = card.OpenCardReq
	OpenCardResp = card.OpenCardResp

	CardService interface {
		OpenCard(ctx context.Context, in *OpenCardReq, opts ...grpc.CallOption) (*OpenCardResp, error)
	}

	defaultCardService struct {
		cli zrpc.Client
	}
)

func NewCardService(cli zrpc.Client) CardService {
	return &defaultCardService{
		cli: cli,
	}
}

func (m *defaultCardService) OpenCard(ctx context.Context, in *OpenCardReq, opts ...grpc.CallOption) (*OpenCardResp, error) {
	client := card.NewCardServiceClient(m.cli.Conn())
	return client.OpenCard(ctx, in, opts...)
}
