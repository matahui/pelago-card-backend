// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.4
// Source: card.proto

package server

import (
	"context"

	"pelago-card-backend/rpc/card/internal/logic"
	"pelago-card-backend/rpc/card/internal/svc"
	"pelago-card-backend/rpc/pb/card"
)

type CardServiceServer struct {
	svcCtx *svc.ServiceContext
	card.UnimplementedCardServiceServer
}

func NewCardServiceServer(svcCtx *svc.ServiceContext) *CardServiceServer {
	return &CardServiceServer{
		svcCtx: svcCtx,
	}
}

// 商户入驻注册
func (s *CardServiceServer) RegisterMerchant(ctx context.Context, in *card.RegisterMerchantReq) (*card.RegisterMerchantResp, error) {
	l := logic.NewRegisterMerchantLogic(ctx, s.svcCtx)
	return l.RegisterMerchant(in)
}

// 获取商户信息
func (s *CardServiceServer) GetMerchant(ctx context.Context, in *card.GetMerchantReq) (*card.GetMerchantResp, error) {
	l := logic.NewGetMerchantLogic(ctx, s.svcCtx)
	return l.GetMerchant(in)
}

// 更新商户信息
func (s *CardServiceServer) UpdateMerchant(ctx context.Context, in *card.UpdateMerchantReq) (*card.UpdateMerchantResp, error) {
	l := logic.NewUpdateMerchantLogic(ctx, s.svcCtx)
	return l.UpdateMerchant(in)
}

// 商户列表查询
func (s *CardServiceServer) ListMerchants(ctx context.Context, in *card.ListMerchantsReq) (*card.ListMerchantsResp, error) {
	l := logic.NewListMerchantsLogic(ctx, s.svcCtx)
	return l.ListMerchants(in)
}
