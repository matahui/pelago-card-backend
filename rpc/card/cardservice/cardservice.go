// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.4
// Source: card.proto

package cardservice

import (
	"context"

	"pelago-card-backend/rpc/pb/card"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	GetMerchantReq       = card.GetMerchantReq
	GetMerchantResp      = card.GetMerchantResp
	ListMerchantsReq     = card.ListMerchantsReq
	ListMerchantsResp    = card.ListMerchantsResp
	MerchantInfo         = card.MerchantInfo
	RegisterMerchantReq  = card.RegisterMerchantReq
	RegisterMerchantResp = card.RegisterMerchantResp
	UpdateMerchantReq    = card.UpdateMerchantReq
	UpdateMerchantResp   = card.UpdateMerchantResp

	CardService interface {
		// 商户入驻注册
		RegisterMerchant(ctx context.Context, in *RegisterMerchantReq, opts ...grpc.CallOption) (*RegisterMerchantResp, error)
		// 获取商户信息
		GetMerchant(ctx context.Context, in *GetMerchantReq, opts ...grpc.CallOption) (*GetMerchantResp, error)
		// 更新商户信息
		UpdateMerchant(ctx context.Context, in *UpdateMerchantReq, opts ...grpc.CallOption) (*UpdateMerchantResp, error)
		// 商户列表查询
		ListMerchants(ctx context.Context, in *ListMerchantsReq, opts ...grpc.CallOption) (*ListMerchantsResp, error)
	}

	defaultCardService struct {
		cli zrpc.Client
	}
)

func NewCardService(cli zrpc.Client) CardService {
	return &defaultCardService{
		cli: cli,
	}
}

// 商户入驻注册
func (m *defaultCardService) RegisterMerchant(ctx context.Context, in *RegisterMerchantReq, opts ...grpc.CallOption) (*RegisterMerchantResp, error) {
	client := card.NewCardServiceClient(m.cli.Conn())
	return client.RegisterMerchant(ctx, in, opts...)
}

// 获取商户信息
func (m *defaultCardService) GetMerchant(ctx context.Context, in *GetMerchantReq, opts ...grpc.CallOption) (*GetMerchantResp, error) {
	client := card.NewCardServiceClient(m.cli.Conn())
	return client.GetMerchant(ctx, in, opts...)
}

// 更新商户信息
func (m *defaultCardService) UpdateMerchant(ctx context.Context, in *UpdateMerchantReq, opts ...grpc.CallOption) (*UpdateMerchantResp, error) {
	client := card.NewCardServiceClient(m.cli.Conn())
	return client.UpdateMerchant(ctx, in, opts...)
}

// 商户列表查询
func (m *defaultCardService) ListMerchants(ctx context.Context, in *ListMerchantsReq, opts ...grpc.CallOption) (*ListMerchantsResp, error) {
	client := card.NewCardServiceClient(m.cli.Conn())
	return client.ListMerchants(ctx, in, opts...)
}
